enclosure size: { length: 10.0, width: 10.0, height: 3.0 }
lights: [light2]
cameras: [cameraL, cameraR]
environment: "./checkered_floor.yaml"
namespace: /ambf/env/
max iterations: 50
gravity: { x: 0.0, y: 0.0, z: -9.8 }
shaders:
  path: ../../ambf_shaders/
  vertex: "shader.vs"
  fragment: "shader.fs"

light1:
  namespace: lights/
  name: light1
  location: { x: 0.0, y: 0.5, z: 2.5 }
  direction: { x: 0, y: 0, z: -1.0 }
  spot exponent: 0.3
  shadow quality: 0
  cutoff angle: 0.7

light2:
  namespace: lights/
  name: light2
  location: { x: 0.0, y: 0.0, z: 0.0 }
  direction: { x: 0, y: 0.0, z: 1.0 }
  attenuation: {constant: 0.8, linear: 0.8, quadratic: 0.0}
  spot exponent: 0.9 #Not used in the SRC
  shadow quality: 5
  cutoff angle: 1.6
  parent: BODY CameraFrame

light3:
  namespace: lights/
  name: light3
  location: { x: 0.00, y: 0.0, z: 5.5 }
  direction: { x: 0, y: 0, z: -1.0 }
  spot exponent: 0.3 #Not used in the SRC
  shadow quality: 0
  cutoff angle: 1.0
  parent: BODY CameraFrame


# CAMERA COMMON CONFIG
cam common configs:
  clipping plane: &cam_common_clipping_plane
    near: 0.001
    far: 10.0
  field of view: &cam_common_fov 0.6
  publish image resolution: &cam_common_pub_img_res { width: 1300, height: 1024 } # davinci endoscope 
  publish depth resolution: &cam_common_pub_depth_res { width: 640, height: 512 }

cameraL:
  namespace: cameras/
  name: cameraL
  # camera is set at the ECM tip in the hand-eye script.
  location: { x: 0.0, y: 0.0, z: 0.0 } 
  look at: { x: 0.0, y: 0.0, z: -1.0 }
  up: { x: 0.0, y: 1.0, z: 0.0 }
  clipping plane: *cam_common_clipping_plane
  field view angle: *cam_common_fov 
  monitor: 1
  parent: BODY CameraFrame
  publish image: True
  publish image interval: 1
  publish image resolution: *cam_common_pub_img_res 
  publish depth: False
  publish depth resolution: *cam_common_pub_depth_res
  multipass: False # Set to True to enable shadows
  mouse control multipliers: { pan: 0.1, rotate: 1.0, scroll: 0.1, arcball: 0.1 }
  ## PLUGIN CONFIG
  plugins: [
    {
      name: ar_ros_plugin,
      path: ../../plugins/build/,
      filename: libar_ros_plugin.so
    },
    {
      name: camera_projection_override,
      path: ../../plugins/build/,
      filename: libcamera_projection_override.so
    }
  ]
  ## daVinci Endoscope config
  ar-ros plugin config:
    rostopic: "/jhu_daVinci/left/image_rect_color"
  ## option 2
  ## Calculated from calculate_projection_matrix.py
  projection matrix: [[ 2.47828,  0.     ,  0.     ,  0.     ],
                       [0.     ,  3.14926,  0.     ,  0.     ],
                       [0.     ,  0.     , -1.0002 , -0.002  ],
                       [0.     ,  0.     , -1.     ,  0.     ]]

cameraR:
  namespace: cameras/
  name: cameraR
  location: { x: 0.002, y: 0.0, z: -0.05 }
  look at: { x: 0.0, y: 0.0, z: -1.0 }
  up: { x: 0.0, y: 1.0, z: 0.0 }
  clipping plane: *cam_common_clipping_plane
  field view angle: *cam_common_fov 
  monitor: 2
  parent: BODY CameraFrame
  publish image: False
  publish image interval: 5
  publish image resolution: *cam_common_pub_img_res
  publish depth: False
  publish depth resolution: *cam_common_pub_depth_res
  visible: False
  mouse control multipliers: { pan: 0.1, rotate: 1.0, scroll: 0.1, arcball: 0.1 }
  # multipass: True

